{"version":3,"sources":["assets/logo.svg","assets/capa.jpg","assets/acai.jpg","assets/caldos.jpg","assets/picole.jpg","ToolBar/index.tsx","Jumbotron/index.tsx","Cardapio/index.tsx","Pedido/index.tsx","Contato/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ToolBar","src","background","className","alt","acai","caldos","picole","Contato","App","capa","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,iMCE5B,SAASC,IAEpB,OACI,6BACI,kDACA,4BACI,2CACA,sCACA,yC,oBCPD,SAASA,IAEpB,OACI,6BACI,yBAAKC,IAAKC,IAAYC,UAAU,iBAAiBC,IAAI,gB,0DCAlD,SAASJ,IAEpB,OACI,6BACI,6BACI,wCACA,0CACA,yBAAKC,IAAKI,IAAMF,UAAU,wBAAwBC,IAAI,SACtD,sCACA,yBAAKH,IAAKK,IAAQH,UAAU,0BAA0BC,IAAI,WAC1D,yCACA,yBAAKH,IAAKM,IAAQJ,UAAU,0BAA0BC,IAAI,YAE9D,6BACI,0CACA,4BACI,2FACA,2FACA,2FACA,8EACA,8EACA,8EACA,qGACA,0GACA,uDACA,iFACA,kFAGR,6BACI,sCACA,4BACI,2EACA,sEACA,4DACA,6DACA,8DAGR,6BACI,yCACA,yCACA,4BACI,yCACA,oCACA,gDACA,6CACA,wCAEJ,2CACA,4BACI,0CACA,uCACA,+CACA,yCACA,mCACA,wCACA,2CACA,yDC/DL,SAASJ,IAEpB,OACI,6BAAK,uCCHE,SAASQ,IAEpB,OACI,6BAAK,wCCuBEC,MAlBf,WACE,OACE,yBAAKN,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACK,EAAD,MACA,4BAAQL,UAAU,cAChB,yBAAKF,IAAKS,IAAMP,UAAU,WAAWC,IAAI,SACzC,0CCRYO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDgIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5c661e23.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.767fe254.svg\";","module.exports = __webpack_public_path__ + \"static/media/capa.e85d49cb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/acai.e9843da8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/caldos.e1bd93ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/picole.7f2e4143.jpg\";","import React from 'react';\n\nexport default function ToolBar() {\n\n    return (\n        <div>\n            <h1>Açai na Cumbuca</h1>\n            <ul>\n                <li>Cardápio</li>\n                <li>Pedido</li>\n                <li>Contato</li>\n            </ul>\n        </div>\n\n    );\n\n}\n\n","import React from 'react';\nimport background from '../assets/capa.jpg'\n\nexport default function ToolBar() {\n\n    return (\n        <div>            \n            <img src={background} className=\"App-background\" alt=\"background\" />\n        </div>\n    );\n\n}\n\n","import React from 'react';\nimport './custom.css';\nimport acai from '../assets/acai.jpg';\nimport caldos from '../assets/caldos.jpg';\nimport picole from '../assets/picole.jpg';\n\n\nexport default function ToolBar() {\n\n    return (\n        <div>\n            <div>\n                <h1>Cardapio</h1>\n                <h2>Açaí</h2>\n                <img src={acai} className=\"App-acai img-cardapio\" alt=\"acai\" />\n                <h2>Caldos</h2>\n                <img src={caldos} className=\"App-caldos img-cardapio\" alt=\"caldos\" />\n                <h2>Picolé</h2>\n                <img src={picole} className=\"App-picole img-cardapio\" alt=\"picole\" />\n            </div>\n            <div>\n                <h2>Açaí</h2>\n                <ul>\n                    <li>Açaí No Copo 350 Ml (Com 3 Acompanhamentos Grátis)</li>\n                    <li>Açaí No Copo 500 Ml (Com 3 Acompanhamentos Grátis)</li>\n                    <li>Açaí No Copo 700 Ml (Com 3 Acompanhamentos Grátis)</li>\n                    <li>Açaí Na Cumbuca 200 Ml (Açaí Puro)</li>\n                    <li>Açaí Na Cumbuca 300 Ml (Açaí Puro)</li>\n                    <li>Açaí Na Cumbuca 500 Ml (Açaí Puro)</li>\n                    <li>Pote Tamanho Família De 1.000 Ml De Açaí sem acompanhamentos</li>\n                    <li>Pote de Tamanho Família de 1.000 Ml De Açaí Com 3 Acompanhamentos</li>\n                    <li>Cascão de Açaí</li>\n                    <li>Barca Pequena de Açaí Com 5 acompanhamentos</li>\n                    <li>Taça Trufada De Açai Com Creme de Avelã</li>\n                </ul>\n            </div>\n            <div>\n                <h2>Caldos</h2>\n                <ul>\n                    <li>Caldo De Mandioquinha Com Calabresa E Bacon</li>\n                    <li>Caldo De Mandioquinha Com Alho Poró</li>\n                    <li>Caldo De Mandioca Com Frango</li>\n                    <li>Caldo De Mandioca Com Costela</li>\n                    <li>Caldo De Feijão Com Bacon</li>\n                </ul>\n            </div>\n            <div>\n                <h2>Picolé</h2>\n                <h3>Com leite</h3>\n                <ul>\n                    <li>Chocolate</li>\n                    <li>Coco</li>\n                    <li>Leite Condensado</li>\n                    <li>Milho - Verde</li>\n                    <li>Morango</li>\n                </ul>\n                <h3>Com água</h3>\n                <ul>\n                    <li>Cupuaçu</li>\n                    <li>Abacaxi</li>\n                    <li>Cajá - Manga</li>\n                    <li>Framboesa</li>\n                    <li>Uva</li>\n                    <li>Limão</li>\n                    <li>Mini - Saia</li>\n                    <li>Picolé Bombom Skimo</li>\n                </ul>\n            </div>\n        </div>\n    );\n\n}\n\n/*\n\nCaldos\n\n\n\n\n\nPicolé\n\nCom leite\n\n• Chocolate\n• Coco\n• Leite Condensado\n• Milho - Verde\n• Morango\n\nCom água\n\nCupuaçu\nAbacaxi\nCajá - Manga\nFramboesa\nUva\nLimão\nMini - Saia\nPicolé Bombom Skimo\n\n\n*/","import React from 'react';\n\nexport default function ToolBar() {\n\n    return (\n        <div><h1>Pedido</h1></div>\n    );\n\n}\n\n","import React from 'react';\n\nexport default function Contato() {\n\n    return (\n        <div><h1>Contato</h1></div>\n    );\n\n}\n\n","import React from 'react';\nimport capa from './assets/logo.svg';\nimport './App.css';\nimport TooBar from './ToolBar';\nimport Jumbotron from './Jumbotron';\nimport Cardapio from './Cardapio';\nimport Pedido from './Pedido';\nimport Contato from './Contato';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TooBar />\n      <Jumbotron />\n      <Cardapio />\n      <Pedido />\n      <Contato />\n      <header className=\"App-header\">\n        <img src={capa} className=\"App-logo\" alt=\"capa\" />\n        <p>\n          Em breve\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}